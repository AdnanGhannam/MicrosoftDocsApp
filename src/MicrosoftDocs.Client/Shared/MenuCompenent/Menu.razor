@inject IJSRuntime _jsRuntime;

<div class="@("custom-menu " + Class + (RTL ? " rtl" : ""))" data-id="@(i)">
    <label for="@($"menu-cb-{i}")" class="custom-menu__button-box clickable @ButtonClass">
        @Button
    </label>

    <input type="checkbox" name="@($"menu-cb-{i}")" id="@($"menu-cb-{i}")" class="custom-menu__checkbox" />

    <div class="@("custom-menu__content " + $" {ContentClass}")">
        @ChildContent
    </div>

    <label for="@($"menu-cb-{i}")" class="custom-menu__overlay"></label>
</div>



@code {
    private string i = Guid.NewGuid().ToString();

    [Parameter]
    public string Class { get; set; } = "";

    [Parameter]
    public string ButtonClass { get; set; } = "";

    [Parameter]
    public string ContentClass { get; set; } = "";

    [Parameter]
    public RenderFragment Button { get; set; }

    [Parameter]
    public RenderFragment ChildContent { get; set; }

    [Parameter]
    public bool RTL { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        _jsRuntime.InvokeVoidAsync("addEventToWindow", i);
    }
}
